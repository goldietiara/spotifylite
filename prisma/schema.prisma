// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  name        String
  email       String     @unique
  dateOfBirth String
  image       String
  location    String
  onBoarding  Boolean
  playlist    Playlist[]
  following   User[]     @relation("UserFollowing")
  followers   User[]     @relation("UserFollowing")
  isArtist    Boolean
  artistId    Int?
  Artist      Artist?    @relation(fields: [artistId], references: [id])
}

model userProfile {
  id            Int        @id @default(autoincrement())
  userId        String     @db.Uuid
  likedSongs    Song[]
  likedPlaylist Playlist[]
}

model Playlist {
  id            Int          @id @default(autoincrement())
  userId        String       @db.Uuid
  name          String
  description   String
  image         String
  createdAt     DateTime     @default(now())
  songs         Song[]
  likes         User[]
  userProfileId Int?
  userProfile   userProfile? @relation(fields: [userProfileId], references: [id])
}

model Artist {
  id        Int     @id @default(autoincrement())
  userId    String  @db.Uuid
  name      String
  image     String
  header    String
  followers User[]
  album     Album[]
}

model Song {
  id            Int          @id @default(autoincrement())
  artistId      String       @db.Uuid
  name          String
  playlistId    Int?
  Playlist      Playlist?    @relation(fields: [playlistId], references: [id])
  albumId       Int?
  Album         Album?       @relation(fields: [albumId], references: [id], onDelete: Cascade)
  userProfileId Int?
  userProfile   userProfile? @relation(fields: [userProfileId], references: [id])
}

model Album {
  id        Int      @id @default(autoincrement())
  name      String
  image     String
  genre     String
  createdAt DateTime @default(now())
  songs     Song[]
  artistId  Int?
  Artist    Artist?  @relation(fields: [artistId], references: [id], onDelete: Cascade)
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int          @id @default(autoincrement())
  name          String
  email         String       @unique
  dateOfBirth   String
  image         String
  imageName     String
  location      String
  onBoarding    Boolean
  playlist      Playlist[]
  following     User[]       @relation("UserFollows")
  followers     User[]       @relation("UserFollows")
  userProfileId Int?
  userProfile   userProfile?
  isArtist      Boolean      @default(false)
  artistId      Int?         @unique
}

model userProfile {
  id            Int        @id @default(autoincrement())
  likedSongs    Song[]
  likedPlaylist Playlist[]
  userId        Int        @unique
  User          User       @relation(fields: [userId], references: [id])
  Artist        Artist?    @relation(fields: [artistId], references: [id])
  artistId      Int?
}

model Playlist {
  id            Int          @id @default(autoincrement())
  userId        Int          @unique
  name          String
  description   String
  image         String
  imageName     String
  createdAt     DateTime     @default(now())
  songs         Song[]
  likes         User[]
  userProfileId Int?
  userProfile   userProfile? @relation(fields: [userProfileId], references: [id])
}

model Artist {
  id         Int           @id @default(autoincrement())
  email      String        @unique
  name       String
  image      String
  imageName  String
  header     String
  headerName String
  album      Album[]
  followers  userProfile[]
  userId     Int           @unique
}

model Song {
  id            Int          @id @default(autoincrement())
  artistId      Int
  name          String
  playlistId    Int?
  Playlist      Playlist?    @relation(fields: [playlistId], references: [id])
  albumId       Int?
  Album         Album?       @relation(fields: [albumId], references: [id], onDelete: Cascade)
  userProfileId Int?
  userProfile   userProfile? @relation(fields: [userProfileId], references: [id])
}

model Album {
  id        Int      @id @default(autoincrement())
  name      String
  image     String
  imageName String
  genre     String
  createdAt DateTime @default(now())
  songs     Song[]
  artistId  Int?
  Artist    Artist?  @relation(fields: [artistId], references: [id], onDelete: Cascade)
}
